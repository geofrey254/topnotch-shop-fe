import type { Metadata } from "next";
import "./globals.css";
import Navbar from "@/components/navigation/Navbar";
import Footer from "@/components/navigation/Footer";

import { AppWrapper } from "@/providers/ProductProvider";
import { Providers } from "@/providers/SessionProvider";
import { CartProvider } from "@/providers/CartContext";
import { ShippingProvider } from "@/providers/ShippingContext";

export const metadata: Metadata = {
  title: "Topnotch Publishers",
  description: "Generated by create next app",
};

async function fetchProducts(
  page: number,
  pageSize: number,
  all: boolean = false
) {
  try {
    const res = await fetch(
      `${process.env.NEXT_PUBLIC_API_URL}/products/` ||
        `${process.env.NEXT_PUBLIC_API_URL}/products/?page=${page}`
    );
    if (!res.ok) {
      throw new Error("Failed to fetch Products");
    }

    const data = await res.json();
    const products = data.results;

    const totalPages = all ? 1 : Math.ceil(data.count / 6);

    return { products, totalPages };
  } catch (error) {
    console.error("An unexpected error occurred:", error);
    return { chapters: [], totalPages: 1 };
  }
}

async function fetchBanners() {
  try {
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/banners`);

    if (!res.ok) {
      throw new Error("Failed to fetch Banners");
    }

    const data = await res.json();
    const banners = data;
    return banners;
  } catch (error) {
    console.error("An unexpected error occured while fetching Banners:", error);
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const page = 1;
  const pageSize = 6;
  const { products, totalPages } = await fetchProducts(page, pageSize);
  const banners = await fetchBanners();
  return (
    <Providers>
      <ShippingProvider>
        <CartProvider>
          <html lang="en">
            <body>
              <Navbar />
              <AppWrapper
                products={products}
                banners={banners}
                totalPages={totalPages}
              >
                {children}
              </AppWrapper>
              <Footer />
            </body>
          </html>
        </CartProvider>
      </ShippingProvider>
    </Providers>
  );
}
